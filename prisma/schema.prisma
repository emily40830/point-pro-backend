// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  MERCHANT
  ADMIN
}

enum SpecialtyType {
  SINGLE
  MULTIPLE
}


model Member {
  id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
  name  String @db.VarChar(50)
  account String @db.VarChar(50)
  passhash String? @db.Text 
  role Role @default(USER)
  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt
  loginedAt DateTime?
}

model Meal{
    id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
    title String @db.VarChar(100)
    coverUrl String? @db.Text
    description String? @db.Text
    price Int @db.Integer @default(0)
    position Int @db.Integer @default(0)
    published_at DateTime? @db.Timestamptz()
    categories CategoriesOnMeals[]
    specialties SpecialtiesOnMeals[]
    createdAt DateTime @default(dbgenerated("now()"))
    updatedAt DateTime @updatedAt
}

model Category{
    id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
    title String @db.VarChar(100) @unique
    position Int? @db.Integer @default(0)
    meals CategoriesOnMeals[]
    createdAt DateTime @default(dbgenerated("now()"))
    updatedAt DateTime @updatedAt
}

model CategoriesOnMeals{
    id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
    categoryId String @db.Uuid
    category Category @relation(fields: [categoryId], references: [id])
    mealId String @db.Uuid
    meal Meal @relation(fields: [mealId], references: [id])
    createdAt DateTime @default(dbgenerated("now()"))
    updatedAt DateTime @updatedAt
}

model Specialty{
    id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
    title String @db.Char(20)
    type SpecialtyType @default(SINGLE)
    specialtyItems SpecialtyItem[]
    meals SpecialtiesOnMeals[]
    createdAt DateTime @default(dbgenerated("now()"))
    updatedAt DateTime @updatedAt

    @@unique([type, title])
}

model SpecialtyItem{
    id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
    specialtyId String @db.Uuid
    specialty Specialty @relation(fields: [specialtyId], references: [id])
    title String @db.Char(20)
    price Int? @default(0)
    createdAt DateTime @default(dbgenerated("now()"))
    updatedAt DateTime @updatedAt
}

model SpecialtiesOnMeals{
    id  String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
    specialtyId String @db.Uuid
    specialty Specialty @relation(fields: [specialtyId], references: [id])
    mealId String @db.Uuid
    meal Meal @relation(fields: [mealId], references: [id])
    position Int? @default(0)
    createdAt DateTime @default(dbgenerated("now()"))
    updatedAt DateTime @updatedAt
}